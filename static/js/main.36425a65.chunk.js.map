{"version":3,"sources":["SearchResults/ContactSearchResults.tsx","SearchResults/CalendarSearchResults.tsx","SearchResults/SlackMessageSearchResults.tsx","SearchResults/TweetSearchResults.tsx","SearchResults/DropboxSearchResults.tsx","SearchResults/SearchResults.tsx","data/Contacts.ts","data/Calendars.ts","data/SlackMessages.ts","data/DropboxFiles.ts","data/Tweets.ts","SearchForm/SearchForm.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ContactSearchResults","this","props","results","map","result","className","key","id","Card","CardContent","Typography","color","gutterBottom","company","variant","component","name","emails","email","phones","phone","Component","CalendarSearchResults","invitees","split","title","date","invitee","SlackMessageSearchResults","channel","author","timestamp","message","TweetSearchResults","user","DropboxSearchResults","created","path","SearchResults","contactResults","length","calendarResults","slackResults","dropboxResults","tweetResults","Contacts","matching_terms","last_contact","Calendars","SlackMessages","DropboxFiles","shared_with","Tweets","SearchForm","handleSubmit","event","a","preventDefault","setState","error","searchData","Object","entries","forEach","entry","search","state","data","searchType","obj","userTerms","value","some","term","includes","push","sort","b","localeCompare","dateSort","dateA","Date","dateB","getTime","handleChange","target","Container","TextField","margin","onChange","Button","type","onClick","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36425a65.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Contact } from \"../models/SearchObject\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport \"./SearchResults.css\";\n\nexport class ContactSearchResults extends Component<\n  { results: Contact[] },\n  {}\n> {\n  render() {\n    const resultName = this.props.results.map(result => {\n      return (\n        <div className=\"search-card\" key={result.id}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                {result.company}\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                {result.name}\n              </Typography>\n              <Typography color=\"textSecondary\">\n                {result.emails.map(email => {\n                  return (\n                    <span className=\"email\" key={email}>\n                      {email}\n                    </span>\n                  );\n                })}\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n                {result.phones.map(phone => {\n                  return (\n                    <span className=\"phone\" key={phone}>\n                      {phone}\n                    </span>\n                  );\n                })}\n              </Typography>\n            </CardContent>\n          </Card>\n        </div>\n      );\n    });\n    return resultName;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Calendar } from \"../models/SearchObject\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport \"./SearchResults.css\";\n\nexport class CalendarSearchResults extends Component<\n  { results: Calendar[] },\n  {}\n> {\n  render() {\n    const resultName = this.props.results.map(result => {\n      const invitees: string[] = result.invitees.split(\" \");\n      const key: string = `${result.id}_${result.title}`;\n      return (\n        <div className=\"search-card\" key={key}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                {result.title}\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                {result.date}\n              </Typography>\n              <Typography color=\"textSecondary\">\n                Invitees:{\" \"}\n                {invitees.map(invitee => {\n                  return (\n                    <span className=\"invitee\" key={invitee}>\n                      {invitee}{\" \"}\n                    </span>\n                  );\n                })}\n              </Typography>\n              {/* <Typography variant=\"body2\" component=\"p\">\n                {result.phones.map(phone => {\n                  return <span key={phone}>{phone}</span>;\n                })}\n              </Typography> */}\n            </CardContent>\n          </Card>\n        </div>\n      );\n    });\n    return resultName;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport \"./SearchResults.css\";\nimport { SlackMessage } from \"../models/SearchObject\";\n\nexport class SlackMessageSearchResults extends Component<\n  { results: SlackMessage[] },\n  {}\n> {\n  render() {\n    const resultName = this.props.results.map(result => {\n      return (\n        <div className=\"search-card\" key={result.id}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                #{result.channel}\n              </Typography>\n              <Typography className=\"author\" variant=\"h5\" component=\"h2\">\n                {result.author}\n              </Typography>\n              <Typography color=\"textSecondary\">\n                {result.timestamp}\n              </Typography>\n                {result.message}\n            </CardContent>\n          </Card>\n        </div>\n      );\n    });\n    return resultName;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport \"./SearchResults.css\";\nimport { Tweet } from \"../models/SearchObject\";\n\nexport class TweetSearchResults extends Component<\n  { results: Tweet[] },\n  {}\n> {\n  render() {\n    const resultName = this.props.results.map(result => {\n      return (\n        <div className=\"search-card\" key={result.timestamp}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                {result.timestamp}\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                {result.user}\n              </Typography>\n              <Typography color=\"textSecondary\">\n                {result.message}\n              </Typography>\n            </CardContent>\n          </Card>\n        </div>\n      );\n    });\n    return resultName;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Dropbox } from \"../models/SearchObject\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport \"./SearchResults.css\";\n\nexport class DropboxSearchResults extends Component<\n  { results: Dropbox[] },\n  {}\n> {\n  render() {\n    const resultName = this.props.results.map(result => {\n      return (\n        <div className=\"search-card\" key={result.id}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                {result.created}\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                File Name: {result.title}\n              </Typography>\n              <Typography color=\"textSecondary\">\n                {/* {result.shared_with.map(invitee => {\n                  return (\n                    <span key={invitee}>\n                      {invitee}\n                    </span>\n                  );\n                })} */}\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n                File Path: {result.path}\n              </Typography>\n            </CardContent>\n          </Card>\n        </div>\n      );\n    });\n    return resultName;\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Contact,\n  Calendar,\n  SlackMessage,\n  Dropbox,\n  Tweet\n} from \"../models/SearchObject\";\nimport \"./SearchResults.css\";\nimport { ContactSearchResults } from \"./ContactSearchResults\";\nimport { CalendarSearchResults } from \"./CalendarSearchResults\";\nimport { SlackMessageSearchResults } from \"./SlackMessageSearchResults\";\nimport { TweetSearchResults } from \"./TweetSearchResults\";\nimport { DropboxSearchResults } from \"./DropboxSearchResults\";\n\nexport class SearchResults extends Component<\n  {\n    contactResults: Contact[];\n    calendarResults: Calendar[];\n    slackResults: SlackMessage[];\n    dropboxResults: Dropbox[];\n    tweetResults: Tweet[];\n  },\n  {}\n> {\n  render() {\n    return (\n      <div>\n        {this.props.contactResults.length > 0 && (\n          <div>\n            <h1>Contact Results</h1>\n            <ContactSearchResults\n              results={this.props.contactResults}\n            ></ContactSearchResults>\n          </div>\n        )}\n        {this.props.calendarResults.length > 0 && (\n          <div>\n            <h1>Calendar Results</h1>\n            <CalendarSearchResults\n              results={this.props.calendarResults}\n            ></CalendarSearchResults>\n          </div>\n        )}\n        {this.props.slackResults.length > 0 && (\n          <div>\n            <h1>Slack Results</h1>\n            <SlackMessageSearchResults\n              results={this.props.slackResults}\n            ></SlackMessageSearchResults>\n          </div>\n        )}\n        {this.props.dropboxResults.length > 0 && (\n          <div>\n            <h1>Dropbox Results</h1>\n            <DropboxSearchResults\n              results={this.props.dropboxResults}\n            ></DropboxSearchResults>\n          </div>\n        )}\n        {this.props.tweetResults.length > 0 && (\n          <div>\n            <h1>Twitter Results</h1>\n            <TweetSearchResults\n              results={this.props.tweetResults}\n            ></TweetSearchResults>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import { Contact } from \"../models/SearchObject\";\n\nexport const Contacts: Contact[] = [\n  {\n    id: \"12345\",\n    name: \"John Doe\",\n    company: \"Acme Inc\",\n    emails: [\"john@acme.co\", \"doe@gmail.com\"],\n    phones: [\"650-555-5555\", \"+44 171 5555 5555\"],\n    matching_terms: [\"acme\", \"john\", \"john doe\"],\n    last_contact: \"2019-02-26\"\n  },\n  {\n    id: \"31456\",\n    name: \"Robert Roe\",\n    company: \"Acme Inc\",\n    emails: [\"bob@acme.co\"],\n    phones: [\"+44 171 6666 5555\"],\n    matching_terms: [\"acme\", \"robert\", \"roe\", \"bob\"],\n    last_contact: \"2019-02-29\"\n  },\n  {\n    id: \"787661\",\n    name: \"Alice Smith\",\n    company: \"Other Corp\",\n    emails: [\"alice@other.co\"],\n    phones: [\"+1 415 555 6666\"],\n    matching_terms: [\"alice\", \"other\", \"alice smith\"],\n    last_contact: \"2019-02-29\"\n  }\n];\n","import { Calendar } from \"../models/SearchObject\";\n\nexport const Calendars: Calendar[] = [\n  {\n    id: \"12345\",\n    title: \"Acme Proposal Meeting\",\n    invitees: \"dave, john, bob, carol\",\n    matching_terms: [\"dave\", \"john\", \"bob\", \"carol\", \"acme\"],\n    date: \"2019-01-10 10:00:00\"\n  },\n  {\n    id: \"12345\",\n    title: \"Acme Final Delivery Meeting\",\n    invitees: \"dave, john, bob, alice\",\n    matching_terms: [\"dave\", \"john\", \"bob\", \"alice\", \"acme\"],\n    date: \"2019-03-01 11:00:00\"\n  }\n];\n","import { SlackMessage } from \"../models/SearchObject\";\n\nexport const SlackMessages: SlackMessage[] = [\n  {\n    id: \"12345\",\n    channel: \"chatter\",\n    author: \"alice\",\n    message: \"Who's up for lunch right now?\",\n    timestamp: \"2019-02-26 11:00:00\",\n    matching_terms: [\"alice\", \"chatter\", \"lunch\"]\n  },\n  {\n    id: \"12346\",\n    channel: \"chatter\",\n    author: \"bob\",\n    message: \"I am up for lunch!\",\n    timestamp: \"2019-02-26 11:00:01\",\n    matching_terms: [\"bob\", \"chatter\", \"lunch\"]\n  },\n  {\n    id: \"12347\",\n    channel: \"chatter\",\n    author: \"carol\",\n    message: \"Me too @alice!\",\n    timestamp: \"2019-02-26 11:00:02\",\n    matching_terms: [\"carol\", \"chatter\", \"alice\"]\n  },\n  {\n    id: \"22345\",\n    channel: \"customer-chatter\",\n    author: \"alice\",\n    message: \"Did any of you meet with Acme folks last week?\",\n    timestamp: \"2019-02-26 12:00:00\",\n    matching_terms: [\"alice\", \"customer-chatter\", \"acme\"]\n  },\n  {\n    id: \"22346\",\n    channel: \"customer-chatter\",\n    author: \"dave\",\n    message: \"Yeah, I met with Bob there\",\n    timestamp: \"2019-02-26 12:00:01\",\n    matching_terms: [\"dave\", \"customer-chatter\", \"bob\"]\n  },\n  {\n    id: \"22347\",\n    channel: \"customer-chatter\",\n    author: \"dave\",\n    message: \"I think John from Acme was in that meeting too\",\n    timestamp: \"2019-02-26 12:00:02\",\n    matching_terms: [\"dave\", \"john\", \"acme\"]\n  }\n];\n","import { Dropbox } from \"../models/SearchObject\";\n\nexport const DropboxFiles: Dropbox[] = [\n  {\n    id: \"12345\",\n    path: \"/taxes/2016/w2-acme.pdf\",\n    title: '\"2016 W2\"',\n    shared_with: [\"jane@accountants.com\", \"spouse@family.org\"],\n    matching_terms: [\"tax\", \"w2\", \"alice\"],\n    created: \"2016-02-01\"\n  },\n  {\n    id: \"34567\",\n    path: \"/work/customers/acme/invoice.docx\",\n    title: '\"ACME Corp: Invoice\"',\n    shared_with: [\"acme-accounts@mycompany.com\"],\n    matching_terms: [\"acme\", \"invoice\"],\n    created: \"2019-02-01\"\n  },\n  {\n    id: \"56789\",\n    path: \"/purchases/2016/fridge.pdf\",\n    title: '\"Best Buy: Invoice\"',\n    matching_terms: [\"invoice\"],\n    created: \"2019-02-01\"\n  },\n  {\n    id: \"3456789\",\n    path: \"/work/customers/acme/proposal.docx\",\n    title: '\"ACME Corp: Draft MoU\"',\n    shared_with: [\"acme-accounts@mycompany.com\"],\n    matching_terms: [\"acme\", \"proposal\", \"mou\"],\n    created: \"2019-01-19\"\n  },\n  {\n    id: \"3556789\",\n    path: \"/work/customers/acme/meeting-notes.docx\",\n    title: '\"ACME Corp: Meeting Notes\"',\n    shared_with: [\"acme-accounts@mycompany.com\"],\n    matching_terms: [\"acme\", \"meeting notes\"],\n    created: \"2019-02-04\"\n  }\n];\n","import { Tweet } from \"../models/SearchObject\";\n\nexport const Tweets: Tweet[] = [\n  {\n    user: \"@acmecorp\",\n    message: \"We're hiring in Boston!\",\n    timestamp: \"2019-02-29\",\n    matching_terms: [\"acme\", \"hiring\", \"boston\"]\n  },\n  {\n    user: \"@acmecorp\",\n    message: \"We're no longer hiring in Timbuktu\",\n    timestamp: \"2019-02-27\",\n    matching_terms: [\"acme\", \"hiring\", \"timbuktu\"]\n  }\n];\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport \"../SearchForm/SearchForm.css\";\nimport { SearchResults } from \"../SearchResults/SearchResults\";\nimport { TextField, Button, Container } from \"@material-ui/core/\";\nimport { Contacts } from \"../data/Contacts\";\nimport { Calendars } from \"../data/Calendars\";\nimport {\n  Contact,\n  Calendar,\n  SlackMessage,\n  Dropbox,\n  Tweet\n} from \"../models/SearchObject\";\nimport { SlackMessages } from \"../data/SlackMessages\";\nimport { DropboxFiles } from \"../data/DropboxFiles\";\nimport { Tweets } from \"../data/Tweets\";\n\ninterface State {\n  value: string;\n  error: boolean;\n  contactResults: Contact[];\n  calendarResults: Calendar[];\n  slackResults: SlackMessage[];\n  dropboxResults: Dropbox[];\n  tweetResults: Tweet[];\n}\nexport class SearchForm extends Component<{}, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      value: \"\",\n      error: false,\n      contactResults: [],\n      calendarResults: [],\n      slackResults: [],\n      dropboxResults: [],\n      tweetResults: []\n    };\n  }\n  handleSubmit = async (event: any) => {\n    event.preventDefault();\n    // clears previous results if there are any\n    await this.setState({\n      error: false,\n      contactResults: [],\n      calendarResults: [],\n      slackResults: [],\n      dropboxResults: [],\n      tweetResults: []\n    });\n    const searchData = {\n      contactResults: Contacts,\n      calendarResults: Calendars,\n      slackResults: SlackMessages,\n      dropboxResults: DropboxFiles,\n      tweetResults: Tweets\n    };\n    // Searches through each dataset\n    Object.entries(searchData).forEach(entry => {\n      this.search(entry[1], entry[0]);\n    });\n    // Sets error if no results are found\n    if (\n      this.state.contactResults.length === 0 &&\n      this.state.calendarResults.length === 0 &&\n      this.state.slackResults.length === 0 &&\n      this.state.dropboxResults.length === 0 &&\n      this.state.tweetResults.length === 0\n    ) {\n      this.setState({ error: true });\n    }\n  };\n  search = (data: any, searchType: any) => {\n    data.forEach((obj: any) => {\n      // checks if matching terms contains user's search terms\n      // search terms are calculated by separating user's input by commas or spaces\n      const userTerms = this.state.value.split(/,| /);\n      if (obj.matching_terms.some((term: string) => userTerms.includes(term))) {\n        const key: keyof State = searchType;\n        const results: any = this.state[key];\n        if (results && !results.some((result: any) => result === obj)) {\n          results.push(obj);\n          this.setState({ [key]: results } as any);\n        }\n      }\n    });\n    // Sorts all results in ascending order\n    this.sort();\n  };\n  sort = () => {\n    // Sorts contacts by full name\n    this.state.contactResults.sort((a: Contact, b: Contact) =>\n      a.name.localeCompare(b.name)\n    );\n    // Sorts calendar results by date\n    this.state.calendarResults.sort((a: Calendar, b: Calendar) => {\n      return this.dateSort(a.date, b.date);\n    });\n    // Sorts slack messages by timestamp\n    this.state.slackResults.sort((a: SlackMessage, b: SlackMessage) => {\n      return this.dateSort(a.timestamp, b.timestamp);\n    });\n    // Sorts dropbox results by date created\n    this.state.dropboxResults.sort((a: Dropbox, b: Dropbox) => {\n      return this.dateSort(a.created, b.created);\n    });\n    // Sorts tweets by timestamp\n    this.state.tweetResults.sort((a: Tweet, b: Tweet) => {\n      return this.dateSort(a.timestamp, b.timestamp);\n    });\n  };\n  dateSort = (a: string, b: string) => {\n    const dateA = new Date(a);\n    const dateB = new Date(b);\n    return dateA.getTime() - dateB.getTime();\n  };\n  handleChange = (event: any) => {\n    event.preventDefault();\n    this.setState({ value: event.target.value });\n  };\n  render() {\n    return (\n      <Container className=\"search-form\">\n        <form>\n          <TextField\n            margin=\"normal\"\n            value={this.state.value}\n            onChange={this.handleChange}\n          ></TextField>\n          <br></br>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            onClick={this.handleSubmit}\n            disabled={!this.state.value}\n          >\n            Search\n          </Button>\n        </form>\n        {this.state.error && <p>No results found</p>}\n        <SearchResults\n          contactResults={this.state.contactResults}\n          calendarResults={this.state.calendarResults}\n          slackResults={this.state.slackResults}\n          dropboxResults={this.state.dropboxResults}\n          tweetResults={this.state.tweetResults}\n        ></SearchResults>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { SearchForm } from './SearchForm/SearchForm';\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <SearchForm></SearchForm>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}